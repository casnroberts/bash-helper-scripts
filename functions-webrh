#!/bin/bash

############
# WEBRH HELPER FUNCTIONS
# General: repositories must live in the same parent folder
#
# dependencies:
#  --  USER variable; from bash_profile
#		a string containing the user name
#  --  REPOS array; from bash_profile
#		an array of valid project repositories
#  --  REPO_HOME variable; from bash_profile
#		the path where all the repos exist together
#  --  Repo shortcut alias'; from functions-dev
#		cds to the top of a specific repo
#  --  getMaster function required; from bash_profile
#       returns repo-specific master branch
# --  sandbox function required; from bash_profile
#      returns sandbox path
# --  getRepo function required; from functions-dev
#      returns name of current repository
############

test -f functions-dev && . $_

# Syncs the webrh directory with webdrupal and pushes up to selected sandbox
# to run on a box other than yours, set USER variable equal to the name of that box
function pksync {
	repo=$(getRepo)
	start=$(pwd)
	if [[ $repo == "webrh" || $repo == "webrh-alt" ]]; then
		echo "Syncing webrh with $USER" && webrh && echoCmd echo "Move to $(pwd)" && grunt && webdrupal && echoCmd echo "Move to $(pwd)" && bower link webrh && echoCmd grunt build && echoCmd echo "rsync webdrupal to $USER" && echo "$USER" | make rsync2sandbox
	else
		echo "This command must be run in the webrh directory."
	fi
	cd $start
}

# Runs an import of patterns
# to run on a box other than yours, set USER variable equal to the name of that box
function pkimport {
	start=$(pwd)
    #[ $# -eq 0 ] && patterns="--all" || patterns="$*"
    echo "Importing webrh patterns to $sandbox" && ssh $(sandbox) "cd ${DRUPAL_LOC} && drush pbi ${*:---all} && drush cc all"
	cd $start
}

# Runs a remove and then an import of patterns
# to run on a box other than yours, set USER variable equal to the name of that box
function pkbuild {
	start=$(pwd)
    #[ $# -eq 0 ] && patterns="--all" || patterns="$*"
    echo "Remove and then import webrh patterns to $sandbox" && ssh $(sandbox) "cd ${DRUPAL_LOC} && drush pbi-remove ${*:--all} && drush pbi ${*:--all} && drush cc all"
	cd $start
}

function pkfull {
	buildbox ${USER:1} && pksync ${USER:1} && pkimport ${USER:1}
}

function testupdate {
	repo=$(getRepo)
	pattern_count=$#
	fail=0
	success=0
	if [[ $repo == "webrh" || $repo == "webrh-alt" ]]; then
	    #if no patterns were provided, throw error
	    if [ $pattern_count -eq 0 ]; then
	        echo "No test names were provided to update.  Please provide tests names in this format: $ testupdate promo_band standard_text_band cta"
	        return;
	    fi
	    # iterate over list of patterns to update tests for
	    for pattern in $@; do
	        grunt test:$pattern:update
	        # if the update fails, run it one more time
	        if [ $? -ne 0 ]; then
				fail++
	            grunt test:$pattern:update
				if [ $? -ne 0 ]; then
					success++
				fi
			else
				success++
	        fi
	    done
	else
		echo "This command must be run in the webrh directory."
	fi
}